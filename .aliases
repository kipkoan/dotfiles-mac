#==============================================================================
#=  Aliases                                                                   =
#==============================================================================

#=  development  ==============================================================
alias b='bundle'
alias be='bundle exec'
alias gadd="git add -u && git add . && git status"

#=  bash  =====================================================================
alias ..='cd ..'
alias cd..='cd ..'
alias c='clear'
alias diff='colordiff'
alias e='exit'
alias grep='grep $GREP_OPTIONS'
alias h='history'
alias ht='HISTTIMEFORMAT="%F %T  " history'
alias ls='/bin/ls -hF'
alias ls.='ls -d .*'
alias l='ls -l'
alias l.='ls -ld .*'
alias la='ls -al'
alias ll='ls -Al'
alias locate='mdfind -name'
alias root="sudo bash -l"
#alias sudo='sudo -Es'
alias v='gvim'
alias gv='gvim'



alias flushdns='sudo discoveryutil mdnsflushcache;sudo discoveryutil udnsflushcaches'

#==============================================================================
#=  Functions                                                                 =
#==============================================================================

#=  SSH into port-fowrwarded host =============================================
sshr () {
  ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -o "LogLevel ERROR" -p $1 root@canid-i.redangus.org
}

sshl () {
  ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -o "LogLevel ERROR" -p $1 root@localhost
}

#=  PDF Man Pages  ============================================================
pdfman () { man -t $@ | ps2pdf - - | open -f -a Preview; }

#=  Back-Up file  =============================================================
#bu () { cp -a "$1" "$1"~$(date +%F.%T)~; }
bu () {
  pattern='^.*[^/]'  # get everything except for trailing forward-slashes
  [[ $1 =~ $pattern ]]  # match regex
  file=${BASH_REMATCH[0]}  # assign matched pattern to "$file"
  cp -a "$file" "$file"~$(date +%F.%T)~
}

#=  Random Sort  ==============================================================
rsort () {
  if sort -R /dev/null 2> /dev/null; then
    sort -R
  else
    while IFS= read -r f; do printf "%05d %s\n" "$RANDOM" "$f"; done | sort -n | cut -c7-
  fi
}

#=  Change Directory to Front Finder window  ==================================
ff () { osascript -e 'tell application "Finder"'\
 -e "if (${1-1} <= (count Finder windows)) then"\
 -e "get POSIX path of (target of window ${1-1} as alias)"\
 -e 'else' -e 'get POSIX path of (desktop as alias)'\
 -e 'end if' -e 'end tell'; };\

cdff () { cd "`ff $@`"; };
